---
import Quote from "./Quote.astro";
import Avatar from "./Avatar.astro";

import PatrickMalatack from "../assets/PatrickMalatack.png";
import AlexBouchard from "../assets/AlexBouchard.png";
import PaulAsjes from "../assets/PaulAsjes.png";
import DavidBoyne from "../assets/DavidBoyne.png";
import SagarBatchu from "../assets/SagarBatchu.png";
import LaurenLong from "../assets/LaurenLong.png";
import VladPick from "../assets/VladPick.png";
import AlexPlugaru from "../assets/AlexPlugaru.png";
// import PhilLeggetter from "../assets/PhilLeggetter.png";
import MauriceKherlakian from "../assets/MauriceKherlakian.png";

const fullQuoteSupporters = [
  {
    name: "Paul Asjes",
    description: "Developer Experience Engineer @ ElevenLabs",
    quote:
      "I've been working with (and often against) webhooks for years, both as a consumer and an implementer, always wishing that we as an industry could come up with something better. In my opinion, Event Destinations are exactly that.",
    image: PaulAsjes,
  },
  {
    name: "Sagar Batchu",
    description: "Co-Founder and CEO @ Speakeasy",
    quote:
      "Webhooks are a great idea, suffering from a bad implementation. Event Destinations is an incredible project to move the industry forward with a consumer experience that works for developers, rather than against them.",
    image: SagarBatchu,
  },
  {
    name: "David Boyne",
    description: "Founder @ EventCatalog",
    quote:
      "For years, I've been thinking about the evolution of webhooks. Why create them, verify them, manage and scale them? Why can't companies directly send information into brokers? We can simplify the whole thing, and event destinations may be the next step forward. EDA is becoming more accessible for everyone, so why not make handling real-time events easier, too?",
    image: DavidBoyne,
  },
  {
    name: "Alex Bouchard",
    description: "Co-Founder & CEO @ Hookdeck",
    quote:
      "Delivering webhooks at scale is hard. Event Destinations represents a required evolution of event delivery, helping event producers scale more efficiently and providing a much improved developer experience for event consumers.",
    image: AlexBouchard,
  },
  {
    name: "Patrick Malatack",
    description: "Former VP Product @ Twilio",
    quote:
      "At Twilio, we ultimately spent thousands of developer hours building queuing, security, retry logic, and a reverse load balancer to reliably deliver webhooks at scale.",
    image: PatrickMalatack,
  },
];

const avatarOnlySupporters = [
  {
    name: "Lauren Long",
    description: "Co-Founder @ Ampersand",
    image: LaurenLong,
  },
  {
    name: "Vlad Pick",
    description: "Engineering Manager @ Attentive",
    image: VladPick,
  },
  {
    name: "Alex Plugaru",
    description: "Co-founder & CTO @ Gorgias",
    image: AlexPlugaru,
  },
  // {
  //   name: "Phil Leggetter",
  //   description: "DX and DevRel @ Hookdeck",
  //   image: PhilLeggetter,
  // },
  {
    name: "Maurice Kherlakian",
    description: "Co-Founder and CTO @ Hookdeck",
    image: MauriceKherlakian,
  },
];
---

<h3>With the support of</h3>

<div class="quote-wrapper">
  {
    fullQuoteSupporters.map(({ name, description, quote, image }) => (
      <Quote image={image} name={name} description={description}>
        "{quote}"
      </Quote>
    ))
  }
</div>

<ul class="supporters-list">
  {
    avatarOnlySupporters.map(({ name, description, image }) => (
      <li class="list-item">
        <Avatar image={image} />
        <div>
          <p class="regular-s">{name}</p>
          <p class="regular-s role">{description}</p>
        </div>
      </li>
    ))
  }
</ul>

<style>
  .quote-wrapper {
    display: flex;
    flex-grow: 1;
    flex-direction: column;
    align-items: center;
    gap: var(--spacing-12);
    margin-top: 0;

    > * {
      margin-top: var(--spacing-4);
    }
  }

  .supporters-list {
    border: 1px solid var(--outline-neutral);
    padding: var(--spacing-1);
    list-style: none;
    margin-bottom: var(--spacing-6);
    margin-top: var(--spacing-12);

    display: grid;
    grid-template-columns: 1fr 1fr;
    align-items: center;
    gap: var(--spacing-1);
  }

  li.list-item {
    display: flex;
    flex-grow: 1;
    flex-direction: column;
    align-items: center;
    gap: var(--spacing-4);
    border: 1px solid var(--outline-neutral);
    padding: var(--spacing-5);
    height: 100%;
    box-sizing: border-box;

    p {
      color: var(--foreground-neutral-fg-neutral-1, #141412);
      text-align: center;
      text-transform: uppercase;
      margin: 0;

      &.role {
        color: var(--foreground-neutral-fg-neutral-3, #7a786e);
      }
    }
  }
</style>
